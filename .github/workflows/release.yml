name: release

on:
  push:
    tags:
      - "v*.*.*"
jobs:
  goreleaser:
    runs-on: ubuntu-latest
    environment: release
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: setup release environment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |-
          echo 'GITHUB_TOKEN=${{secrets.GITHUB_TOKEN}}' > .release-env
          # - name: draft release
          #   run: make release

  rocksdb-x86_64-linux:
    needs: ["goreleaser"]
    runs-on: ubuntu-latest
    environment: release
    steps:
      - uses: cachix/install-nix-action@v16
      - uses: cachix/cachix-action@v10
        with:
          name: cronos
          signingKey: "${{ secrets.CACHIX_SIGNING_KEY }}"
      - name: build linux rocksdb binaries
        env:
          PLATFORM: Linux_x86_64
        run: |
          FLAKE="github:${GITHUB_REPOSITORY}/${GITHUB_REF_NAME}"
          nix build ${FLAKE}#cronosd-tarball
          cp result cronos_${GITHUB_REF_NAME}-rocksdb_${PLATFORM}.tar.gz
          nix build ${FLAKE}#cronosd-testnet-tarball
          cp result cronos_${GITHUB_REF_NAME}-testnet-rocksdb_${PLATFORM}.tar.gz
          echo 'FILES<<EOF' >> $GITHUB_ENV
          ls -1 *.tar.gz >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
          cat $GITHUB_ENV
      - name: upload linux x86_64 rocksdb binaries
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: "${{ env.FILES }}"

  rocksdb-aarch64-linux:
    needs: ["goreleaser"]
    runs-on: ubuntu-latest
    environment: release
    steps:
      - uses: cachix/install-nix-action@v16
      - run: |
         DEBIAN_FRONTEND=noninteractive
         sudo apt-get update -q -y && sudo apt-get install -q -y qemu-system-aarch64 qemu-efi binfmt-support qemu-user-static
         mkdir -p ~/.config/nix
         sudo bash -c "echo system-features = aarch64-linux arm-linux >> /etc/nix/nix.conf"
      - uses: cachix/cachix-action@v10
        with:
          name: cronos
          signingKey: "${{ secrets.CACHIX_SIGNING_KEY }}"
      - name: build rocksdb nix
        env:
          PLATFORM: Linux_arm64
        run: |
          FLAKE="github:${GITHUB_REPOSITORY}/${GITHUB_REF_NAME}"
          nix build --extra-platforms aarch64-linux ${FLAKE}#cronosd-tarball
          cp result cronos_${GITHUB_REF_NAME}-rocksdb_${PLATFORM}.tar.gz
          nix build --extra-platforms aarch64-linux ${FLAKE}#cronosd-testnet-tarball
          cp result cronos_${GITHUB_REF_NAME}-testnet-rocksdb_${PLATFORM}.tar.gz
          echo 'FILES<<EOF' >> $GITHUB_ENV
          ls -1 *.tar.gz >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
          cat $GITHUB_ENV
      - name: upload linux arm64 rocksdb binaries
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: "${{ env.FILES }}"

  rocksdb-x86_64-mac:
    needs: ["goreleaser"]
    runs-on: macos-latest
    environment: release
    steps:
      - uses: cachix/install-nix-action@v16
      - uses: cachix/cachix-action@v10
        with:
          name: cronos
          signingKey: "${{ secrets.CACHIX_SIGNING_KEY }}"
      - name: build mac rocksdb binaries
        env:
          PLATFORM: Darwin_x86_64
        run: |
          FLAKE="github:${GITHUB_REPOSITORY}/${GITHUB_REF_NAME}"
          nix build ${FLAKE}#cronosd-tarball
          cp result cronos_${GITHUB_REF_NAME}-rocksdb_${PLATFORM}.tar.gz
          nix build ${FLAKE}#cronosd-testnet-tarball
          cp result cronos_${GITHUB_REF_NAME}-testnet-rocksdb_${PLATFORM}.tar.gz 
          echo 'FILES<<EOF' >> $GITHUB_ENV
          ls -1 *.tar.gz >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
          cat $GITHUB_ENV
      - name: upload mac x86_64 rocksdb binaries
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: "${{ env.FILES }}"

